{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x090D39F96c9e470f7eBb2B606b5BED4c7d1d304d",
      "txHash": "0x963b7eec10996bf4e2ef3677243e3c0235832be18d5066f0e7e0736189e60db6",
      "kind": "uups"
    }
  ],
  "impls": {
    "f6fbfb74999a1ac06ad52a1ba8fccffaa6010db79d65caefa27e51302f63f028": {
      "address": "0xE17B0d13926F03C0a9C2d6185B505C253E7cDb1d",
      "txHash": "0xe99403031e55a41cbc94d4aa9ed7bcdb1c6163d20bf4c6799b79f20980928e18",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2499_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "harvestLog",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_struct(Harvest)7653_storage)dyn_storage",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:27"
          },
          {
            "label": "harvestLogCadence",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:28"
          },
          {
            "label": "lastHarvestTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:29"
          },
          {
            "label": "upgradeProposalTime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:31"
          },
          {
            "label": "cascadingAccess",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:51"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:59"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:60"
          },
          {
            "label": "strategistRemitter",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:61"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:84"
          },
          {
            "label": "callFee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:85"
          },
          {
            "label": "treasuryFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:86"
          },
          {
            "label": "strategistFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv2",
            "src": "contracts/abstract/ReaperBaseStrategyv2.sol:87"
          },
          {
            "label": "dualRewardToken",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:27"
          },
          {
            "label": "want",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:28"
          },
          {
            "label": "cWant",
            "offset": 0,
            "slot": "365",
            "type": "t_contract(CErc20I)8584",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:29"
          },
          {
            "label": "comptroller",
            "offset": 0,
            "slot": "366",
            "type": "t_contract(IComptroller)8930",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:39"
          },
          {
            "label": "rewardToNativeRoute",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:47"
          },
          {
            "label": "dualRewardToNativeRoute",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:48"
          },
          {
            "label": "nativeToWantRoute",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:49"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:57"
          },
          {
            "label": "targetLTV",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:72"
          },
          {
            "label": "allowedLTVDrift",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:73"
          },
          {
            "label": "balanceOfPool",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:74"
          },
          {
            "label": "borrowDepth",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:75"
          },
          {
            "label": "minWantToLeverage",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:76"
          },
          {
            "label": "maxBorrowDepth",
            "offset": 0,
            "slot": "376",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:77"
          },
          {
            "label": "minRewardToSell",
            "offset": 0,
            "slot": "377",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:78"
          },
          {
            "label": "withdrawSlippageTolerance",
            "offset": 0,
            "slot": "378",
            "type": "t_uint256",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:79"
          },
          {
            "label": "isDualRewardActive",
            "offset": 0,
            "slot": "379",
            "type": "t_bool",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:80"
          },
          {
            "label": "dualRewardIndex",
            "offset": 1,
            "slot": "379",
            "type": "t_uint8",
            "contract": "ReaperStrategyCompoundLeverage",
            "src": "contracts/ReaperStrategyCompoundLeverage.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Harvest)7653_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv2.Harvest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(CErc20I)8584": {
            "label": "contract CErc20I",
            "numberOfBytes": "20"
          },
          "t_contract(IComptroller)8930": {
            "label": "contract IComptroller",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2499_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2499_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2198_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Harvest)7653_storage": {
            "label": "struct ReaperBaseStrategyv2.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2198_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
